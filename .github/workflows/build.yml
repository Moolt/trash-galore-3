name: Build and Release Artifacts

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: self-hosted
    name: Set up release version
    outputs:
      release_version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate version number
        id: version
        run: |
          $date = (Get-Date -Format "yyyyMMdd")
          $commit = (git rev-parse --short HEAD)
          $env:VERSION = "$date-$commit"
          Write-Output "::set-output name=version::$env:VERSION"
        shell: pwsh

  merge:
    runs-on: self-hosted
    name: Merge Changes
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run merge script
        run: ./ci/merge.ps1
        shell: pwsh

  build_windows:
    runs-on: self-hosted
    name: Build Windows
    needs: merge
    steps:
      - name: Run Windows build script
        run: ./ci/build_windows.ps1
        shell: pwsh

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v2
        with:
          name: target-windows.zip
          path: build/target-windows.zip

  build_linux:
    runs-on: self-hosted
    name: Build Linux
    needs: merge
    steps:
      - name: Run Linux build script
        run: ./ci/build_linux.ps1
        shell: pwsh

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: target-linux.AppImage
          path: build/target-linux.AppImage

  build_html:
    runs-on: self-hosted
    name: Build HTML
    needs: merge
    steps:
      - name: Run HTML build script
        run: ./ci/build_html.ps1
        shell: pwsh

      - name: Upload HTML artifact
        uses: actions/upload-artifact@v2
        with:
          name: target-html.zip
          path: build/target-html.zip

  release:
    runs-on: self-hosted
    name: Create GitHub Release
    needs: [build_windows, build_linux, build_html]
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: target-windows.zip
          path: build

      - name: Download Linux artifact
        uses: actions/download-artifact@v2
        with:
          name: target-linux.AppImage
          path: build

      - name: Download HTML artifact
        uses: actions/download-artifact@v2
        with:
          name: target-html.zip
          path: build

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "release-${{ needs.setup.outputs.release_version }}"
          release_name: "Build ${{ needs.setup.outputs.release_version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/target-windows.zip
          asset_name: target-windows.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/target-linux.AppImage
          asset_name: target-linux.AppImage
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload HTML artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/target-html.zip
          asset_name: target-html.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
